<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<RootNamespace>PersonalSite.WebUI</RootNamespace>
    	<AssemblyName>PersonalSite.WebUI</AssemblyName>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<SpaRoot>ClientApp\</SpaRoot>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.1">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.1.2" />
		<PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="codecracker.CSharp" Version="1.1.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<AdditionalFiles Include="stylecop.json" CopyToOutputDirectory="PreserveNewest"/>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Application\Application.csproj" />
		<ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
	</Target>

	<Target Name="PublishClient" AfterTargets="ComputeFilesToPublish" Condition=" '$(Configuration)' == 'Release' ">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)\build\**" />
			<ResolvedFileToPublish Include="@(DistFiles)" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>Client/%(RecursiveDir)%(Filename)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="PublishFrontend" AfterTargets="ComputeFilesToPublish" Condition=" '$(Configuration)' == 'Docker-Release' ">
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)\build\**" />
			<ResolvedFileToPublish Include="@(DistFiles)" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>Client/%(RecursiveDir)%(Filename)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
